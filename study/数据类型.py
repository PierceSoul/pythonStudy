__author__ = 'Tony Liu'
# -*- coding: utf-8 -*-

# Number(数字)
# Number 数据类型用于存储数值。#
# 数据类型是不允许改变的,这就意味着如果改变 Number 数据类型的值，将重新分配内存空间。
#
# Python 支持四种不同的数值类型：
#整型(Int) - 通常被称为是整型或整数，是正或负整数，不带小数点。
#长整型(long integers) - 无限大小的整数，整数最后是一个大写或小写的L。
#浮点型(floating point real values) - 浮点型由整数部分与小数部分组成，
#   浮点型也可以使用科学计数法表示（2.5e2 = 2.5 x 102 = 250）
#复数( (complex numbers)) - 复数由实数部分和虚数部分构成，
#   可以用a + bj,或者complex(a,b)表示， 复数的实部a和虚部b都是浮点型。

# 类型转换
# int(x [,base ])         将x转换为一个整数
# long(x [,base ])        将x转换为一个长整数
# float(x )               将x转换到一个浮点数
# complex(real [,imag ])  创建一个复数
# str(x )                 将对象 x 转换为字符串
# repr(x )                将对象 x 转换为表达式字符串
# eval(str )              用来计算在字符串中的有效Python表达式,并返回一个对象
# tuple(s )               将序列 s 转换为一个元组
# list(s )                将序列 s 转换为一个列表
# chr(x )                 将一个整数转换为一个字符
# unichr(x )              将一个整数转换为Unicode字符
# ord(x )                 将一个字符转换为它的整数值
# hex(x )                 将一个整数转换为一个十六进制字符串
# oct(x )                 将一个整数转换为一个八进制字符串

# 字符串
#字符串是 Python 中最常用的数据类型。我们可以使用引号('或")来创建字符串。
#（'''）可以避免例如获取的html之类的转意


str = "python"
print("根据索引获取[]: ",str[0])
print("截取字符串 前闭后开[:]: ",str[1 : 4])
print("字符串连接+: ",str + str)
print("字符串重复*: ",str * 2)
print("str是否包含p in: ","p" in str )
print("str不包含p in: ","p" not in str )
print("按字面意思输出 r/R: ",r"\n" )

# 字符串格式化
# % c 格式化字符及其ASCII码
# % s 格式化字符串
# % d 格式化整数
# % u 格式化无符号整型
# % o 格式化无符号八进制数
# % x 格式化无符号十六进制数
# % X 格式化无符号十六进制数（大写）
# % f 格式化浮点数字，可指定小数点后的精度
# % e 用科学计数法格式化浮点数
# % E 作用同 % e，用科学计数法格式化浮点数
# % g % f和 % e的简写
# % G  % f和 % E的简写
# % p 用十六进制数格式化变量的地址
